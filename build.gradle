buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'docker'

group = 'com.github.kuangcp'
version = '0.1.1'
sourceCompatibility = 1.8

repositories {
    maven {
        url="http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven{
        url="https://gitee.com/kcp1104/MavenRepos/raw/master"
    }
    mavenCentral()
}

configurations {
    providedRuntime
//    compile.exclude module: "spring-boot-starter-tomcat"
}
buildDir = 'out'
bootRun {
    sourceResources sourceSets.main
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
	runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
//    compile('org.springframework.boot:spring-boot-starter-jetty')

    compile('com.github.kuangcp:myth-poi:0.2.3-SNAPSHOT')
    compile('io.jsonwebtoken:jjwt:0.9.0')
    //	runtime('mysql:mysql-connector-java')
	runtime('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
}

task buildDocker(type: Docker, dependsOn: build) {
    group='ci'
    // 跳过测试
    test.enabled=false
    //设置自动上传的话，命名就不能乱取了，仓库名/镜像名：tag
//    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from war
            into stageDir
        }
    }
}