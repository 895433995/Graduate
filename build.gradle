buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'docker'

group = 'com.github.kuangcp'
version = '0.1.3'
sourceCompatibility = 1.8
repositories {
    maven {
        url="http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven{
        url="https://gitee.com/kcp1104/MavenRepos/raw/master"
    }
    mavenCentral()
}

configurations {
    providedRuntime
}
buildDir = 'out'
bootRun {
    sourceResources sourceSets.main
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')

// Mine
    compile('com.github.kuangcp:myth-poi:0.2.3-SNAPSHOT')

    compile('io.jsonwebtoken:jjwt:0.9.0')
	runtime('org.postgresql:postgresql')
//    runtime('org.postgresql:postgresql:42.2.2')
    compileOnly('org.projectlombok:lombok')
}

task bootImage(type: Docker, dependsOn: build) {
    group='ci'
    test.enabled=false
//    push = true  //设置自动上传的话，命名就不能乱取了，仓库名/镜像名：tag
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from war
            into stageDir
        }
    }
    // 最后将当前版本镜像tag为release
    doLast {
        println("update Docker Image")
        ['sh', '-c', 'docker tag '+ project.group+'/'+jar.baseName+':'+version+' graduate:release '].execute()
    }
}

